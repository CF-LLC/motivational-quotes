name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      # Fix dependency issues
      - name: Fix package.json
        run: |
          npm pkg delete dependencies.react-day-picker || echo "No react-day-picker in dependencies"
          npm pkg delete dependencies.date-fns || echo "No date-fns in dependencies"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # Get repository name for basePath configuration
      - name: Get repository name
        id: repo-name
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "Repository name: $REPO_NAME"

      # Create v0-user-next.config.mjs with GitHub Pages settings
      - name: Create user Next.js config for GitHub Pages
        run: |
          echo "/** @type {import('next').NextConfig} */" > v0-user-next.config.mjs
          echo "const userConfig = {" >> v0-user-next.config.mjs
          echo "  output: 'export'," >> v0-user-next.config.mjs
          echo "  basePath: '/motivational-quotes'," >> v0-user-next.config.mjs
          echo "  assetPrefix: '/motivational-quotes/'," >> v0-user-next.config.mjs
          echo "};" >> v0-user-next.config.mjs
          echo "" >> v0-user-next.config.mjs
          echo "export default userConfig;" >> v0-user-next.config.mjs
          cat v0-user-next.config.mjs

      # Create a .nojekyll file in the root to disable Jekyll processing
      - name: Create .nojekyll file
        run: touch .nojekyll

      # Build the project
      - name: Build
        run: npm run build

      # Ensure out directory exists and add .nojekyll file
      - name: Prepare output directory
        run: |
          # Make sure the out directory exists
          mkdir -p out
          
          # Add .nojekyll file to the out directory
          touch out/.nojekyll
          echo "Created .nojekyll file"
          
          # Check if out directory is empty
          if [ -z "$(ls -A out 2>/dev/null)" ] || [ ! -f "out/index.html" ]; then
            echo "out directory is empty or missing index.html, checking for build output elsewhere"
            
            if [ -d ".next" ]; then
              echo "Found .next directory"
              if [ -d ".next/static" ]; then
                cp -r .next/static out/
              fi
              
              # Create a basic index.html if it doesn't exist
              if [ ! -f "out/index.html" ]; then
                echo "Creating basic index.html"
                cp index.html out/ 2>/dev/null || echo "<html><head><title>Motivational Quote Generator</title></head><body><h1>Motivational Quote Generator</h1><p>Coming soon!</p></body></html>" > out/index.html
              fi
            elif [ -d "build" ]; then
              echo "Found build directory"
              cp -r build/* out/
            elif [ -d "dist" ]; then
              echo "Found dist directory"
              cp -r dist/* out/
            else
              echo "No build output found, copying source files"
              cp -r app components lib public out/ 2>/dev/null || true
              cp index.html out/ 2>/dev/null || echo "<html><head><title>Motivational Quote Generator</title></head><body><h1>Motivational Quote Generator</h1><p>Coming soon!</p></body></html>" > out/index.html
            fi
          fi
          
          # List contents of out directory
          echo "Contents of out directory:"
          ls -la out/

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: out
          clean: true
