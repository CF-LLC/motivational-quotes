name: Minimal Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Create minimal package.json
        run: |
          cat > package.json << 'EOF'
          {
            "name": "motivational-quotes",
            "version": "1.0.0",
            "private": true,
            "scripts": {
              "dev": "next dev",
              "build": "next build",
              "start": "next start"
            },
            "dependencies": {
              "next": "13.4.19",
              "react": "18.2.0",
              "react-dom": "18.2.0"
            },
            "devDependencies": {
              "autoprefixer": "10.4.14",
              "postcss": "8.4.27",
              "tailwindcss": "3.3.3",
              "typescript": "5.1.6",
              "@types/node": "20.4.8",
              "@types/react": "18.2.18",
              "@types/react-dom": "18.2.7"
            }
          }
          EOF
      
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      
      - name: Create minimal tailwind config
        run: |
          cat > tailwind.config.js << 'EOF'
          /** @type {import('tailwindcss').Config} */
          module.exports = {
            content: [
              "./app/**/*.{js,ts,jsx,tsx,mdx}",
              "./pages/**/*.{js,ts,jsx,tsx,mdx}",
              "./components/**/*.{js,ts,jsx,tsx,mdx}"
            ],
            theme: {
              extend: {},
            },
            plugins: [],
          }
          EOF
          
          cat > postcss.config.js << 'EOF'
          module.exports = {
            plugins: {
              tailwindcss: {},
              autoprefixer: {},
            },
          }
          EOF
      
      - name: Create minimal globals.css
        run: |
          mkdir -p app
          cat > app/globals.css << 'EOF'
          @tailwind base;
          @tailwind components;
          @tailwind utilities;
          EOF
      
      - name: Create minimal layout.tsx
        run: |
          cat > app/layout.tsx << 'EOF'
          import "./globals.css";
          
          export default function RootLayout({
            children,
          }: {
            children: React.ReactNode;
          }) {
            return (
              <html lang="en">
                <body>{children}</body>
              </html>
            );
          }
          EOF
      
      - name: Create minimal page.tsx
        run: |
          cat > app/page.tsx << 'EOF'
          export default function Home() {
            return (
              <main className="flex min-h-screen flex-col items-center justify-center p-4 bg-black text-white">
                <h1 className="text-4xl font-bold mb-8">Motivational Quote Generator</h1>
                <p className="text-xl">
                  This app is being deployed to GitHub Pages. Check back soon!
                </p>
              </main>
            );
          }
          EOF
      
      - name: Create tsconfig.json
        run: |
          cat > tsconfig.json << 'EOF'
          {
            "compilerOptions": {
              "target": "es5",
              "lib": ["dom", "dom.iterable", "esnext"],
              "allowJs": true,
              "skipLibCheck": true,
              "strict": true,
              "forceConsistentCasingInFileNames": true,
              "noEmit": true,
              "esModuleInterop": true,
              "module": "esnext",
              "moduleResolution": "node",
              "resolveJsonModule": true,
              "isolatedModules": true,
              "jsx": "preserve",
              "incremental": true,
              "plugins": [
                {
                  "name": "next"
                }
              ],
              "paths": {
                "@/*": ["./*"]
              }
            },
            "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
            "exclude": ["node_modules"]
          }
          EOF
      
      - name: Create next.config.js
        run: |
          cat > next.config.js << 'EOF'
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            output: 'export',
            images: {
              unoptimized: true,
            },
            assetPrefix: './',
          };
          
          module.exports = nextConfig;
          EOF
      
      - name: Create next-env.d.ts
        run: |
          cat > next-env.d.ts << 'EOF'
          /// <reference types="next" />
          /// <reference types="next/image-types/global" />
          
          // NOTE: This file should not be edited
          // see https://nextjs.org/docs/basic-features/typescript for more information.
          EOF
      
      - name: Build
        run: npm run build
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: out
          clean: true

